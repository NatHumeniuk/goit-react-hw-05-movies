{"version":3,"file":"static/js/866.2d4ab1e2.chunk.js","mappings":"qPACA,EAAuB,sBAAvB,EAAoD,sBAApD,EAAiF,sBAAjF,EAA+G,uB,kBC4C/G,EArCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAERE,GAA4BC,EAAAA,EAAAA,UAAS,QAAOC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAA8BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAgB1B,OAdAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAED,OAFCF,EAAAC,KAAA,EAEtBb,EAAU,WAAWY,EAAAE,KAAA,GACCC,EAAAA,EAAAA,IAAmBtB,GAAS,KAAD,EAA3CU,EAAOS,EAAAI,KACbZ,EAAWD,GACXH,EAAU,WAAWY,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,UAErBM,EAAAA,EAAAA,IAAMN,EAAAK,GAAME,SAAS,yBAAAP,EAAAQ,OAAA,GAAAV,EAAA,kBAExB,kBATsB,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KAUvBhB,GACF,GAAG,CAACb,KAGF8B,EAAAA,EAAAA,MAAA,MAAIC,UAAWC,EAASC,SAAA,CACrBC,MAAMC,QAAQzB,IAA+B,IAAnBA,EAAQ0B,SACjCC,EAAAA,EAAAA,KAAA,KAAGN,UAAWC,EAAUC,SAAC,+BAEf,YAAX3B,GACCI,EAAQ4B,KAAI,SAAAC,GAAM,OAChBT,EAAAA,EAAAA,MAAA,MAAoBC,UAAWC,EAASC,SAAA,EACtCH,EAAAA,EAAAA,MAAA,MAAIC,UAAWC,EAASC,SAAA,CAAC,WACdM,EAAOC,eAAeC,aAEjCJ,EAAAA,EAAAA,KAAA,KAAAJ,SAAIM,EAAOG,YAJJH,EAAOI,GAKX,MAIf,C","sources":["webpack://react-homework-template/./src/pages/Reviews/Reviews.module.css?9a3e","pages/Reviews/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__pCzae\",\"item\":\"Reviews_item__G1rz-\",\"name\":\"Reviews_name__puWkV\",\"alert\":\"Reviews_alert__5+xJO\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport css from '../Reviews/Reviews.module.css';\n\nimport { requestMovieReview } from 'services/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [status, setStatus] = useState('idle');\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        setStatus('pending');\n        const reviews = await requestMovieReview(movieId);\n        setReviews(reviews);\n        setStatus('success');\n      } catch (error) {\n        toast(error.message);\n      }\n    };\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <ul className={css.list}>\n      {Array.isArray(reviews) && reviews.length === 0 && (\n        <p className={css.alert}>We don't have any reviews!</p>\n      )}\n      {status === 'success' &&\n        reviews.map(review => (\n          <li key={review.id} className={css.item}>\n            <h3 className={css.name}>\n              Author: {review.author_details.username}\n            </h3>\n            <p>{review.content}</p>\n          </li>\n        ))}\n    </ul>\n  );\n};\nexport default Reviews;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","status","setStatus","_useState3","_useState4","reviews","setReviews","useEffect","fetchMovieReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_reviews","_context","prev","next","requestMovieReview","sent","t0","toast","message","stop","apply","arguments","_jsxs","className","css","children","Array","isArray","length","_jsx","map","review","author_details","username","content","id"],"sourceRoot":""}